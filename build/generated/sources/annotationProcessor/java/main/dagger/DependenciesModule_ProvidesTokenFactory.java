// Generated by Dagger (https://dagger.dev).
package dagger;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import org.apache.commons.configuration2.Configuration;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DependenciesModule_ProvidesTokenFactory implements Factory<String> {
  private final Provider<Configuration> configurationProvider;

  public DependenciesModule_ProvidesTokenFactory(Provider<Configuration> configurationProvider) {
    this.configurationProvider = configurationProvider;
  }

  @Override
  public String get() {
    return providesToken(configurationProvider.get());
  }

  public static DependenciesModule_ProvidesTokenFactory create(
      Provider<Configuration> configurationProvider) {
    return new DependenciesModule_ProvidesTokenFactory(configurationProvider);
  }

  public static String providesToken(Configuration configuration) {
    return Preconditions.checkNotNullFromProvides(DependenciesModule.providesToken(configuration));
  }
}
