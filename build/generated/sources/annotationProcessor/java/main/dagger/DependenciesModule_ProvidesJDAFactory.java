// Generated by Dagger (https://dagger.dev).
package dagger;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import net.dv8tion.jda.api.JDA;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DependenciesModule_ProvidesJDAFactory implements Factory<JDA> {
  private final Provider<String> tokenProvider;

  public DependenciesModule_ProvidesJDAFactory(Provider<String> tokenProvider) {
    this.tokenProvider = tokenProvider;
  }

  @Override
  public JDA get() {
    return providesJDA(tokenProvider.get());
  }

  public static DependenciesModule_ProvidesJDAFactory create(Provider<String> tokenProvider) {
    return new DependenciesModule_ProvidesJDAFactory(tokenProvider);
  }

  public static JDA providesJDA(String token) {
    return Preconditions.checkNotNullFromProvides(DependenciesModule.providesJDA(token));
  }
}
